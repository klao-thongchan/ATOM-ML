[build-system]
requires = ["pdm-pep517"]
build-backend = "pdm.pep517.api"

[project]
name = "atom-ml"
description = "A Python package for fast exploration of machine learning pipelines"
authors = [{name = "Mavs", email = "m.524687@gmail.com"}]
license = {file = "LICENSE"}
readme = "README.md"
requires-python = ">=3.10,<3.12"
keywords = ["Python package", "Machine Learning", "Modeling", "Data Pipeline"]
dynamic = ["version"]
classifiers = [
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "beartype>=0.16.4",
    "category-encoders>=2.6.3",
    "dagshub>=0.3.8",
    "dill>=0.3.6",
    "gplearn>=0.4.2",
    "imbalanced-learn>=0.11.0",
    "ipython>=8.11.0",
    "ipywidgets>=8.1.1",
    "featuretools>=1.28.0",
    "joblib>=1.3.1",
    "matplotlib>=3.7.2",
    "mlflow>=2.7.1",
    "modin[ray]>=0.25.0",
    "nltk>=3.8.1",
    "numpy>=1.23.0",
    "optuna>=3.4.0",
    "pandas[parquet]>=2.1.2",
    "plotly>=5.15.0",
    "ray[serve]>=2.7.1",
    "requests>=2.31.0",
    "scikit-learn>=1.4.0",
    "scikit-learn-intelex>=2023.2.1; platform_machine == 'x86_64' or platform_machine == 'AMD64'",
    "scipy>=1.10.1",
    "shap>=0.43.0",
    "sktime[forecasting]>=0.24.0",
    "statsmodels>=0.14.1",
    "zoofs>=0.1.26",
]

[project.optional-dependencies]
full = [
    "botorch>=0.8.5",
    "catboost>=1.2",
    "explainerdashboard>=0.4.3",
    "gradio>=3.44.4",
    "lightgbm>=4.1.0",
    "schemdraw>=0.16",
    "statsforecast>=1.6.0",
    "sweetviz>=2.3.1",
    "wordcloud>=1.9.2",
    "xgboost>=2.0.0",
]

[tool.pdm.dev-dependencies]
dev = [
    # Linting
    "isort>=5.12.0",
    "mypy>=1.6.1",
    "pandas_stubs>=2.1.1.230928",
    "pre-commit>=3.5.0",
    "ruff>=0.1.7",
    "types-requests>=2.31.0.10",
    # Testing
    "nbmake>=1.4.1",  # To test example notebooks
    "pytest>=7.2.1",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.2.0",
    "scikeras>=0.11.0",
    "tensorflow>=2.13.0",
    # Documentation
    "jupyter-contrib-nbextensions>=0.7.0",
    "mike>=1.1.2",  # For versioning
    "mkdocs>=1.5.3",
    "mkdocs-autorefs>=0.5.0",
    "mkdocs-jupyter>=0.24.6",
    "mkdocs-material>=9.4.7",
    "mkdocs-simple-hooks>=0.1.5",
    "pymdown-extensions>=10.3.1",
    "pyyaml>=6.0",
]

[project.urls]
"Documentation" = "https://tvdboom.github.io/ATOM/"
"Issues" = "https://github.com/tvdboom/ATOM/issues"
"Repository" = "https://github.com/tvdboom/ATOM"
"Slack" = "https://join.slack.com/t/atom-alm7229/shared_invite/zt-upd8uc0z-LL63MzBWxFf5tVWOGCBY5g"

[tool.pdm.version]
source = "file"
path = "atom/utils/constants.py"

[tool.pdm.build]
includes = ["atom"]
source-includes = ["tests/*.py"]

[tool.pytest.ini_options]
testpaths = "tests/"
python_files = "*.py"
python_functions = "test_*"

[tool.isort]
skip_gitignore = true
multi_line_output = 5
atomic = true
lines_after_imports = 2
include_trailing_comma = true
ignore_comments = true
remove_redundant_aliases = true

[tool.ruff]
line-length = 99
indent-width = 4
show-fixes = true
extend-include = ["*.ipynb"]
select = [
    "F",  # pyflakes
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "D",  # Missing docstring in public function
    "UP",  # pyupgrade
    "YTT",  # flake8-2020
    "BLE",  # blind-except
    "FBT",  # boolean-trap
    "B",  # bugbear
    "A",  # builtins
    "COM",  # commas
    "C4",  # flake8-comprehensions
    "T10",  # debugger
    "ISC",  # implici-str-concat
    "ICN",  # import-conventions
    "G",  # flake8-logging-format
    "INP",  # no-pep420
    "PIE",  # flake8-pie
    "T20",  # print
    "PYI",  # pyi
    "PT",  # flake8-pytest-style
    "Q",  # quotes
    "RSE",  # raise
    "TID",  # tidy-imports
    "ARG",  # flake8-unused-arguments
    "ERA",  # commented-code
    "PD",  # pandas-vet
    "PGH",  # pygrep
    "FLY",  # flynt
    "NPY",  # numpy-specific-rules
    "PERF",  # performance checks
    "RUF",  # ruff
]
ignore = [
    "E731",  # Do not assign a `lambda` expression, use a `def`
    "COM812",  # Trailing comma missing
    "PD901",  #  Avoid using the generic variable name `df` for DataFrames
    "PD011",  # Use `.to_numpy()` instead of `.values`
    "PD009",  # Use `.iloc` instead of `.iat`
    "ARG002",  # Unused method argument
    "B023",  # Function definition does not bind loop variable
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # Unused imports
"tests/*" = [
    "T20",  # print found
    "S101",  # assert called
    "PT011",  # error is too broad
]
"baserunner.py" = ["ERA001"]  # Commented-out code
"types.py" = [
    "D105",  # Missing docstring in magic method
    "D102",  # Missing docstring in public method
]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.mypy]
ignore_missing_imports = true
disable_error_code = ["attr-defined"]
